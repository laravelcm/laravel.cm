services:
    laravelcm:
        build:
            context: .
            dockerfile: Dockerfile
            args:
                NODE_VERSION: '22'
                PHP_VERSION: 8.4
        image: laravelcm/php
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        healthcheck:
            test: ['CMD', 'curl', '-f', 'http://localhost:${APP_PORT:-8080}/up']
            timeout: 30s
        environment:
          APP_NAME: ${APP_NAME}
          APP_ENV: ${APP_ENV}
          APP_KEY: ${APP_KEY}
          APP_DEBUG: ${APP_DEBUG}
          APP_TIMEZONE: ${APP_TIMEZONE}
          APP_DOMAIN: ${APP_DOMAIN}
          APP_URL: ${APP_URL}
          ASSET_URL: ${ASSET_URL}
          APP_LOCALE: ${APP_LOCALE}
          APP_FALLBACK_LOCALE: ${APP_FALLBACK_LOCALE}
          APP_FAKER_LOCALE: ${APP_FAKER_LOCALE}
          APP_MAINTENANCE_DRIVER: ${APP_MAINTENANCE_DRIVER}
          BCRYPT_ROUNDS: ${BCRYPT_ROUNDS}
          DB_CONNECTION: ${DB_CONNECTION}
          DB_URL: ${DB_URL}
          LOG_CHANNEL: ${LOG_CHANNEL}
          LOG_STACK: ${LOG_STACK}
          LOG_STDERR_FORMATTER: ${LOG_STDERR_FORMATTER}
          LOG_DEPRECATIONS_CHANNEL: ${LOG_DEPRECATIONS_CHANNEL}
          LOG_LEVEL: ${LOG_LEVEL}
          SESSION_DRIVER: ${SESSION_DRIVER}
          SESSION_LIFETIME: ${SESSION_LIFETIME}
          SESSION_ENCRYPT: ${SESSION_ENCRYPT}
          SESSION_PATH: ${SESSION_PATH}
          SESSION_DOMAIN: ${SESSION_DOMAIN}
          BROADCAST_CONNECTION: ${BROADCAST_CONNECTION}
          FILESYSTEM_DISK: ${FILESYSTEM_DISK}
          QUEUE_CONNECTION: ${QUEUE_CONNECTION}
          CACHE_STORE: ${CACHE_STORE}
          CACHE_PREFIX: ${CACHE_PREFIX}
          MEMCACHED_HOST: ${MEMCACHED_HOST}
          REDIS_CLIENT: ${REDIS_CLIENT}
          REDIS_HOST: ${REDIS_HOST}
          REDIS_PASSWORD: ${REDIS_PASSWORD}
          REDIS_PORT: ${REDIS_PORT}
          MAIL_MAILER: ${MAIL_MAILER}
          MAIL_HOST: ${MAIL_HOST}
          MAIL_PORT: ${MAIL_PORT}
          MAIL_USERNAME: ${MAIL_USERNAME}
          MAIL_PASSWORD: ${MAIL_PASSWORD}
          MAIL_ENCRYPTION: ${MAIL_ENCRYPTION}
          MAIL_FROM_ADDRESS: ${MAIL_FROM_ADDRESS}
          MAIL_FROM_NAME: ${MAIL_FROM_NAME}
          AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
          AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
          AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
          AWS_BUCKET: ${AWS_BUCKET}
          AWS_ENDPOINT: ${AWS_ENDPOINT}
          AWS_URL: ${AWS_URL}
          AWS_USE_PATH_STYLE_ENDPOINT: ${AWS_USE_PATH_STYLE_ENDPOINT}
          VITE_APP_NAME: ${VITE_APP_NAME}
          MEDIA_DISK: ${MEDIA_DISK}
          OPENAI_API_KEY: ${OPENAI_API_KEY}
          OPENAI_ORGANIZATION: ${OPENAI_ORGANIZATION}
          OPENAI_PROJECT: ${OPENAI_PROJECT}
          ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
          ANTHROPIC_API_VERSION: ${ANTHROPIC_API_VERSION}
          OLLAMA_URL: ${OLLAMA_URL}
          DEEPSEEK_API_KEY: ${DEEPSEEK_API_KEY}
          SCOUT_DRIVER: ${SCOUT_DRIVER}
          TYPESENSE_HOST: ${TYPESENSE_HOST}
          TYPESENSE_PORT: ${TYPESENSE_PORT}
          TYPESENSE_PROTOCOL: ${TYPESENSE_PROTOCOL}
          TYPESENSE_API_KEY: ${TYPESENSE_API_KEY}
          STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
          STRIPE_VERSION: ${STRIPE_VERSION}
          NOTCHPAY_PUBLIC_KEY: ${NOTCHPAY_PUBLIC_KEY}
          NOTCHPAY_SECRET_KEY: ${NOTCHPAY_SECRET_KEY}
          OCTANE_SERVER: 'frankenphp'
          CADDY_GLOBAL_OPTIONS: |
            servers {
                trusted_proxies static private_ranges
            }
          CADDY_SERVER_EXTRA_DIRECTIVES: |
            @static {
                file
                path *.ico *.css *.js *.gif *.webp *.avif *.jpg *.jpeg *.png *.svg *.woff *.woff2
            }
            header @static Cache-Control "public, max-age=31536000, s-maxage=31536000"
          FRANKENPHP_CONFIG: |
            worker {
                file ./public/frankenphp-worker.php
            }
        volumes:
          - storage:/var/www/html/storage
        networks:
            - dokploy-network
    schedule:
        image: laravelcm/php
        command: ['artisan', 'schedule:work']
        stop_signal: SIGTERM
        healthcheck:
            test: ['CMD', 'healthcheck-schedule']
            start_period: 10s
        environment:
          APP_NAME: ${APP_NAME}
          APP_ENV: ${APP_ENV}
          APP_KEY: ${APP_KEY}
          APP_DEBUG: ${APP_DEBUG}
          APP_TIMEZONE: ${APP_TIMEZONE}
          APP_DOMAIN: ${APP_DOMAIN}
          APP_URL: ${APP_URL}
          ASSET_URL: ${ASSET_URL}
          APP_LOCALE: ${APP_LOCALE}
          APP_FALLBACK_LOCALE: ${APP_FALLBACK_LOCALE}
          APP_FAKER_LOCALE: ${APP_FAKER_LOCALE}
          APP_MAINTENANCE_DRIVER: ${APP_MAINTENANCE_DRIVER}
          BCRYPT_ROUNDS: ${BCRYPT_ROUNDS}
          DB_CONNECTION: ${DB_CONNECTION}
          DB_URL: ${DB_URL}
          LOG_CHANNEL: ${LOG_CHANNEL}
          LOG_STACK: ${LOG_STACK}
          LOG_DEPRECATIONS_CHANNEL: ${LOG_DEPRECATIONS_CHANNEL}
          LOG_LEVEL: ${LOG_LEVEL}
          LOG_STDERR_FORMATTER: ${LOG_STDERR_FORMATTER}
          SESSION_DRIVER: ${SESSION_DRIVER}
          SESSION_LIFETIME: ${SESSION_LIFETIME}
          SESSION_ENCRYPT: ${SESSION_ENCRYPT}
          SESSION_PATH: ${SESSION_PATH}
          SESSION_DOMAIN: ${SESSION_DOMAIN}
          BROADCAST_CONNECTION: ${BROADCAST_CONNECTION}
          FILESYSTEM_DISK: ${FILESYSTEM_DISK}
          QUEUE_CONNECTION: ${QUEUE_CONNECTION}
          CACHE_STORE: ${CACHE_STORE}
          CACHE_PREFIX: ${CACHE_PREFIX}
          MEMCACHED_HOST: ${MEMCACHED_HOST}
          REDIS_CLIENT: ${REDIS_CLIENT}
          REDIS_HOST: ${REDIS_HOST}
          REDIS_PASSWORD: ${REDIS_PASSWORD}
          REDIS_PORT: ${REDIS_PORT}
          MAIL_MAILER: ${MAIL_MAILER}
          MAIL_HOST: ${MAIL_HOST}
          MAIL_PORT: ${MAIL_PORT}
          MAIL_USERNAME: ${MAIL_USERNAME}
          MAIL_PASSWORD: ${MAIL_PASSWORD}
          MAIL_ENCRYPTION: ${MAIL_ENCRYPTION}
          MAIL_FROM_ADDRESS: ${MAIL_FROM_ADDRESS}
          MAIL_FROM_NAME: ${MAIL_FROM_NAME}
          AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
          AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
          AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
          AWS_BUCKET: ${AWS_BUCKET}
          AWS_ENDPOINT: ${AWS_ENDPOINT}
          AWS_URL: ${AWS_URL}
          AWS_USE_PATH_STYLE_ENDPOINT: ${AWS_USE_PATH_STYLE_ENDPOINT}
          VITE_APP_NAME: ${VITE_APP_NAME}
          MEDIA_DISK: ${MEDIA_DISK}
          OPENAI_API_KEY: ${OPENAI_API_KEY}
          OPENAI_ORGANIZATION: ${OPENAI_ORGANIZATION}
          OPENAI_PROJECT: ${OPENAI_PROJECT}
          ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
          ANTHROPIC_API_VERSION: ${ANTHROPIC_API_VERSION}
          OLLAMA_URL: ${OLLAMA_URL}
          DEEPSEEK_API_KEY: ${DEEPSEEK_API_KEY}
          SCOUT_DRIVER: ${SCOUT_DRIVER}
          TYPESENSE_HOST: ${TYPESENSE_HOST}
          TYPESENSE_PORT: ${TYPESENSE_PORT}
          TYPESENSE_PROTOCOL: ${TYPESENSE_PROTOCOL}
          TYPESENSE_API_KEY: ${TYPESENSE_API_KEY}
          STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
          STRIPE_VERSION: ${STRIPE_VERSION}
          NOTCHPAY_PUBLIC_KEY: ${NOTCHPAY_PUBLIC_KEY}
          NOTCHPAY_SECRET_KEY: ${NOTCHPAY_SECRET_KEY}
        volumes:
          - storage:/var/www/html/storage
        networks:
          - dokploy-network
        depends_on:
            - laravelcm
    queue:
        image: laravelcm/php
        command: ['artisan', 'queue:work', '--tries=3', '--queue=default,media']
        stop_signal: SIGTERM
        healthcheck:
            test: ['CMD', 'healthcheck-queue']
            start_period: 10s
        environment:
          APP_NAME: ${APP_NAME}
          APP_ENV: ${APP_ENV}
          APP_KEY: ${APP_KEY}
          APP_DEBUG: ${APP_DEBUG}
          APP_TIMEZONE: ${APP_TIMEZONE}
          APP_DOMAIN: ${APP_DOMAIN}
          APP_URL: ${APP_URL}
          ASSET_URL: ${ASSET_URL}
          APP_LOCALE: ${APP_LOCALE}
          APP_FALLBACK_LOCALE: ${APP_FALLBACK_LOCALE}
          APP_FAKER_LOCALE: ${APP_FAKER_LOCALE}
          APP_MAINTENANCE_DRIVER: ${APP_MAINTENANCE_DRIVER}
          BCRYPT_ROUNDS: ${BCRYPT_ROUNDS}
          DB_CONNECTION: ${DB_CONNECTION}
          DB_URL: ${DB_URL}
          LOG_CHANNEL: ${LOG_CHANNEL}
          LOG_STACK: ${LOG_STACK}
          LOG_STDERR_FORMATTER: ${LOG_STDERR_FORMATTER}
          LOG_DEPRECATIONS_CHANNEL: ${LOG_DEPRECATIONS_CHANNEL}
          LOG_LEVEL: ${LOG_LEVEL}
          SESSION_DRIVER: ${SESSION_DRIVER}
          SESSION_LIFETIME: ${SESSION_LIFETIME}
          SESSION_ENCRYPT: ${SESSION_ENCRYPT}
          SESSION_PATH: ${SESSION_PATH}
          SESSION_DOMAIN: ${SESSION_DOMAIN}
          BROADCAST_CONNECTION: ${BROADCAST_CONNECTION}
          FILESYSTEM_DISK: ${FILESYSTEM_DISK}
          QUEUE_CONNECTION: ${QUEUE_CONNECTION}
          CACHE_STORE: ${CACHE_STORE}
          CACHE_PREFIX: ${CACHE_PREFIX}
          MEMCACHED_HOST: ${MEMCACHED_HOST}
          REDIS_CLIENT: ${REDIS_CLIENT}
          REDIS_HOST: ${REDIS_HOST}
          REDIS_PASSWORD: ${REDIS_PASSWORD}
          REDIS_PORT: ${REDIS_PORT}
          MAIL_MAILER: ${MAIL_MAILER}
          MAIL_HOST: ${MAIL_HOST}
          MAIL_PORT: ${MAIL_PORT}
          MAIL_USERNAME: ${MAIL_USERNAME}
          MAIL_PASSWORD: ${MAIL_PASSWORD}
          MAIL_ENCRYPTION: ${MAIL_ENCRYPTION}
          MAIL_FROM_ADDRESS: ${MAIL_FROM_ADDRESS}
          MAIL_FROM_NAME: ${MAIL_FROM_NAME}
          AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
          AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
          AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
          AWS_BUCKET: ${AWS_BUCKET}
          AWS_ENDPOINT: ${AWS_ENDPOINT}
          AWS_URL: ${AWS_URL}
          AWS_USE_PATH_STYLE_ENDPOINT: ${AWS_USE_PATH_STYLE_ENDPOINT}
          VITE_APP_NAME: ${VITE_APP_NAME}
          MEDIA_DISK: ${MEDIA_DISK}
          OPENAI_API_KEY: ${OPENAI_API_KEY}
          OPENAI_ORGANIZATION: ${OPENAI_ORGANIZATION}
          OPENAI_PROJECT: ${OPENAI_PROJECT}
          ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
          ANTHROPIC_API_VERSION: ${ANTHROPIC_API_VERSION}
          OLLAMA_URL: ${OLLAMA_URL}
          DEEPSEEK_API_KEY: ${DEEPSEEK_API_KEY}
          SCOUT_DRIVER: ${SCOUT_DRIVER}
          TYPESENSE_HOST: ${TYPESENSE_HOST}
          TYPESENSE_PORT: ${TYPESENSE_PORT}
          TYPESENSE_PROTOCOL: ${TYPESENSE_PROTOCOL}
          TYPESENSE_API_KEY: ${TYPESENSE_API_KEY}
          STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
          STRIPE_VERSION: ${STRIPE_VERSION}
          NOTCHPAY_PUBLIC_KEY: ${NOTCHPAY_PUBLIC_KEY}
          NOTCHPAY_SECRET_KEY: ${NOTCHPAY_SECRET_KEY}
        volumes:
            - storage:/var/www/html/storage
        networks:
            - dokploy-network
        depends_on:
            - laravelcm
networks:
    dokploy-network:
        external: true
volumes:
    storage:
        driver: local
