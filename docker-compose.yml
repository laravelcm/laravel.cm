services:
    traefik:
        image: 'traefik:v3.5'
        command:
            - '--api.dashboard=true'
            - '--api.insecure=true'
            - '--providers.docker=true'
            - '--providers.docker.exposedbydefault=false'
            - '--providers.docker.network=traefik'
            - '--entrypoints.web.address=:80'
            - '--entrypoints.websecure.address=:443'
            - '--serverstransport.insecureskipverify=true'
        ports:
            - '80:80'
            - '443:443'
            - '8080:8080'
        volumes:
            - '/var/run/docker.sock:/var/run/docker.sock:ro'
            - 'traefik-letsencrypt:/letsencrypt'
        networks:
            - traefik
            - sail
        labels:
            - traefik.enable=true
            - traefik.http.routers.traefik.rule=Host(`traefik.local`)
            - traefik.http.services.traefik.loadbalancer.server.port=8080
    laravelcm:
        build:
            context: .
            dockerfile: Dockerfile
            target: development
            args:
                WWWUSER: '${WWWUSER}'
                WWWGROUP: '${WWWGROUP}'
                NODE_VERSION: '22'
                PHP_VERSION: 8.4
        image: laravelcm/php
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
            SUPERVISOR_PHP_COMMAND: "/usr/bin/php -d variables_order=EGPCS /var/www/html/artisan octane:start --server=frankenphp --host=0.0.0.0 --admin-port=2019 --port='${APP_PORT:-80}'"
            XDG_CONFIG_HOME: /var/www/html/config
            XDG_DATA_HOME: /var/www/html/data
        healthcheck:
            test: ['CMD', 'curl', '-f', 'http://localhost:${APP_PORT:-8080}/up']
            timeout: 30s
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
            - traefik
        depends_on:
            - pgsql
            - redis
            - typesense
            - minio
            - mailpit
            - soketi
            - traefik
        labels:
            - traefik.enable=true
            - 'traefik.http.routers.laravelcm.rule=Host(`${APP_DOMAIN:-laravelcm.local}`)'
            - traefik.http.routers.laravelcm.entrypoints=websecure
            - traefik.http.routers.laravelcm.tls=true
            - 'traefik.http.services.laravelcm.loadbalancer.server.port=${APP_PORT:-8080}'
            - 'traefik.http.routers.laravelcm-insecure.rule=Host(`${APP_DOMAIN:-laravelcm.local}`)'
            - traefik.http.routers.laravelcm-insecure.entrypoints=web
            - traefik.http.routers.laravelcm-insecure.middlewares=redirect-to-https
            - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
    schedule:
        image: laravelcm/php
        command: ['artisan', 'schedule:work']
        stop_signal: SIGTERM
        healthcheck:
            test: ['CMD', 'healthcheck-schedule']
            start_period: 10s
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - laravelcm
            - pgsql
            - redis
    queue:
        image: laravelcm/php
        command:
            - artisan
            - 'queue:work'
            - '--tries=3'
            - '--queue=default,media'
        stop_signal: SIGTERM
        healthcheck:
            test: ['CMD', 'healthcheck-queue']
            start_period: 10s
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - laravelcm
            - pgsql
            - redis
    pgsql:
        image: 'postgres:17-alpine'
        ports:
            - '${FORWARD_DB_PORT:-5432}:5432'
        environment:
            PGPASSWORD: '${DB_PASSWORD:-secret}'
            POSTGRES_DB: '${DB_DATABASE}'
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
        volumes:
            - 'sail-pgsql:/var/lib/postgresql/data'
            - './vendor/laravel/sail/database/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - pg_isready
                - '-q'
                - '-d'
                - '${DB_DATABASE}'
                - '-U'
                - '${DB_USERNAME}'
            retries: 3
            timeout: 5s
    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'sail-redis:/data'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
    typesense:
        image: 'typesense/typesense:27.1'
        ports:
            - '${FORWARD_TYPESENSE_PORT:-8108}:8108'
        environment:
            TYPESENSE_DATA_DIR: '${TYPESENSE_DATA_DIR:-/typesense-data}'
            TYPESENSE_API_KEY: '${TYPESENSE_API_KEY:-xyz}'
            TYPESENSE_ENABLE_CORS: '${TYPESENSE_ENABLE_CORS:-true}'
        volumes:
            - 'sail-typesense:/typesense-data'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - bash
                - '-c'
                - 'exec 3<>/dev/tcp/localhost/8108 && printf ''GET /health HTTP/1.1\r\nConnection: close\r\n\r\n'' >&3 && head -n1 <&3 | grep ''200'' && exec 3>&-'
            retries: 5
            timeout: 7s
    minio:
        image: 'minio/minio:latest'
        ports:
            - '${FORWARD_MINIO_PORT:-9000}:9000'
            - '${FORWARD_MINIO_CONSOLE_PORT:-8900}:8900'
        environment:
            MINIO_ROOT_USER: sail
            MINIO_ROOT_PASSWORD: password
        volumes:
            - 'sail-minio:/data'
        networks:
            - sail
        command: 'minio server /data --console-address ":8900"'
        healthcheck:
            test:
                - CMD
                - mc
                - ready
                - local
            retries: 3
            timeout: 5s
    mailpit:
        image: 'axllent/mailpit:latest'
        ports:
            - '${FORWARD_MAILPIT_PORT:-1025}:1025'
            - '${FORWARD_MAILPIT_DASHBOARD_PORT:-8025}:8025'
        networks:
            - sail
    soketi:
        image: 'quay.io/soketi/soketi:latest-16-alpine'
        environment:
            SOKETI_DEBUG: '${SOKETI_DEBUG:-1}'
            SOKETI_METRICS_SERVER_PORT: '9601'
            SOKETI_DEFAULT_APP_ID: '${PUSHER_APP_ID}'
            SOKETI_DEFAULT_APP_KEY: '${PUSHER_APP_KEY}'
            SOKETI_DEFAULT_APP_SECRET: '${PUSHER_APP_SECRET}'
        ports:
            - '${PUSHER_PORT:-6001}:6001'
            - '${PUSHER_METRICS_PORT:-9601}:9601'
        networks:
            - sail
networks:
    sail:
        driver: bridge
    traefik:
        driver: bridge
volumes:
    sail-redis:
        driver: local
    sail-typesense:
        driver: local
    sail-minio:
        driver: local
    traefik-letsencrypt:
        driver: local
    sail-pgsql:
        driver: local
